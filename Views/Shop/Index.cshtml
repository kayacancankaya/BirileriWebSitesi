@model BirileriWebSitesi.Models.ViewModels.ShopViewModel
@section Title {
    <meta name="title" content="İthal Ürünler | Toptan ve Perakende Satış">
    <title>İthal Ürünler | Toptan ve Perakende Satış</title>
}
@section Description {
    <meta name="description" content="İthal ürünleri toptan ve perakende olarak satın alın. Katalog ürünleri, marka patent desteği ve e-ticaret çözümleri sunuyoruz.">
}
@section Keywords {
    <meta name="keywords" content="Çin ithalat, toptan ürünler, perakende satış, marka patent, e-ticaret çözümleri, toptan spor malzemeleri ithalatı, marka desteği, toptan petshop ürünleri,
                                    toptan spor malzemesi">
}
@section CSS {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
    <style>
       
        .mobile-filter-toggle {
            position: fixed;
            top: 91%;
            right: 88%;
            z-index: 10000;
            background-color: #FFB200;
            color: black;
            border: none;
            border-radius: 5px;
            padding: 10px 15px;
            font-size: 14px;
            box-shadow: 0 2px 6px rgba(0,0,0,0.2);
            margin-right: 5px;
        }

        .close-sidebar-btn {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 28px;
            border: none;
            background: none;
            color: #333;
            cursor: pointer;
            z-index: 1001;
        }
        .mobile-sidebar {
            position: fixed;
            top: 12%;
            right: -100%;
            width: 80%;
            height: 88%;
            background: #fff;
            box-shadow: -2px 0 5px rgba(0,0,0,0.2);
            overflow-y: auto;
            transition: right 0.3s ease-in-out;
            z-index: 1050;
        }

        .mobile-sidebar.active {
            right: 0;
        }

        .mobile-sidebar .close-btn {
            font-size: 30px;
            padding: 10px;
            cursor: pointer;
            text-align: right;
        }

       .post-thumb {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 180px; /* or same as your image height if needed */
        }
.swiper-wrapper {
    display: flex !important;
}
    </style>
}
<button class="mobile-filter-toggle" id="mobileFilterButton" style="display:none;" onclick="toggleMobileFilter()">
    <i class="fa fa-filter"></i> 
</button>

<!--Product Container-->
<div class="sidebar-page-container">
    <div class="auto-container">
        <div class="row clearfix">
            <!--Content Side-->
            <div class="content-side col-lg-9 col-md-8 col-sm-12">
                <div class="our-shop">
                    <div id="product-content">
                        @Html.Partial("_PartialProductCard",Model.productCard)
                    </div>
                </div>
            </div>
            <!--Sidebar Side-->
            <!--Sidebar Desktop-->
            <div class="col-lg-3 col-md-4 col-sm-12 d-none d-lg-block" id="pcFilterSidebar">
                 <aside class="sidebar">

                     <!-- Search -->
                     <div class="sidebar-widget search-box">
                         <div class="form-group">
                             <span class="alert-text"></span>
                             <input type="search" name="search-field" class="product-search" placeholder="Ara ..." required>
                             <button type="submit" class="product-search-button"><span class="icon fa fa-search"></span></button>
                         </div>
                     </div>

                     @Html.Partial("_PartialPriceFilterWidget")
                     <!--Category Widget-->
                     @Html.Partial("_PartialCategoryWidget", Model.Catalogs)

                 </aside>
             </div>

             <!--Sidebar Mobile-->
            <div id="mobileFilterSidebar" class="mobile-sidebar d-lg-none">
                
                 <aside class="sidebar p-1">
                   
                 <!-- Search -->
                 <div class="sidebar-widget search-box">
                     <div class="form-group">
                         <input type="search" name="search-field" class="product-search" placeholder="Ara ..." required>
                         <button type="submit" class="product-search-button"><span class="icon fa fa-search"></span></button>
                     </div>
                 </div>


                 @Html.Partial("_PartialPriceFilterWidget")
                 <!--Category Widget-->
                 @Html.Partial("_PartialCategoryWidget", Model.Catalogs)

                 </aside>
            </div>
        </div>

        <!--Popular Product Div-->
        <div class="row clearfix" id="popular-products-div">

        </div>
    </div>
</div>
<input type="hidden" id="currentState" value="0" />
@section JqueryUi {
    <script src="~/js/jquery-ui.min.js" defer></script>
}
@section AdditionalScripts {
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
 
    <script>
        $(document).ready(function () {
            var currentState = 0;
            $('#currentState').val("0");
            // Popular products swiper init
            setTimeout(function () {
                if (currentState === 0) {
                    currentState = 1;
                    $.ajax({
                        type: "GET",
                        url: "/Shop/_PartialPopularProductsWidget",
                        async: true,
                        success: function (result) {
                            $("#popular-products-div").html(result);
            
                            setTimeout(function () {
                                new Swiper('.swiper', {
                                    slidesPerView: 1,
                                    spaceBetween: 20,
                                    loop: true,
                                    autoplay: {
                                        delay: 4000,
                                        disableOnInteraction: false,
                                    },
                                    breakpoints: {
                                        576: { slidesPerView: 2 },
                                        768: { slidesPerView: 3 },
                                        992: { slidesPerView: 4 }
                                    }
                                });
                            }, 100); // short wait for DOM render
                        }
                    });
                }
            }, 1000); 

            // decide whether display pagination iaw window length
            lastWidth = window.innerWidth;
            if (window.innerWidth >= 992)
            {
                $("#pagination-list").css("display","block");
            }
            else
            {
                $("#mobileFilterButton").css("display","block");
                $(".styled-pagination").remove();
            }
           
            //initialize nav active line
            $(".dropdown").removeClass("current");
            $(".shop").addClass("current");
           
            //load extra product
            let isLoading = false;
            $(window).on("scroll", function () {
                if (isLoading) return;
                if (window.innerWidth >= 992) return;

                const currentPage = parseInt($("#page-number").val());
                const totalPage = parseInt($("#total-page").val());

                if(currentPage >= totalPage) return;
                
                // When user is near the bottom of the page
                if ($(window).scrollTop() + $(window).height() >= $(document).height() - 2000) {
                    isLoading = true;
                    const visibleSidebar = $("#pcFilterSidebar").is(":visible") ? "#pcFilterSidebar" : "#mobileFilterSidebar";
                    let catalogID =  $(`${visibleSidebar} #catalog-id`).val();
                    let searchString = $(`${visibleSidebar} .product-search`).val();
                    let minPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 0);
                    let maxPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 1);
                    const nextPage = currentPage + 1;

                    $.ajax({
                        type: "GET",
                        url: "/Shop/ShopFiltered",
                        async:true,
                        data: {
                           catalogID: catalogID,
                            searchFilter: searchString,
                            pageNumber: nextPage,
                            minPrice: minPrice,
                            maxPrice: maxPrice,
                        },
                        success: function (response) {
                            $("#product-content").append(response);
                            $("#page-number").val(nextPage);
                             if (window.innerWidth < 992)
                             {
                                 $(".styled-pagination").remove();
                             }
                             isLoading = false;
                        },
                        error: function (xhr) {
                            var response = JSON.parse(xhr.responseText);
                            showAlert(null, response.message, "danger");
                        }
                    });
                            $("#page-number").val(nextPage);
                             if (window.innerWidth < 992)
                             {
                                 $(".styled-pagination").remove();
                             }
                }
            });

            // next button clicked
            $(document).on("click", ".pagination-next", function () {
                const visibleSidebar = $("#pcFilterSidebar").is(":visible") ? "#pcFilterSidebar" : "#mobileFilterSidebar";
                let catalogID =  $(`${visibleSidebar} #catalog-id`).val();
                let searchString = $(`${visibleSidebar} .product-search`).val();
                let minPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 0);
                let maxPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 1);
                let pageNumber = parseInt($("#page-number").val()) + 1;
                var button = $(this);
                $(".filter-button").prop("disabled",true);
                $.ajax({
                    type: "GET",
                    url: "/Shop/ShopFiltered",
                    async: true,
                    data: {
                        catalogID: catalogID,
                        searchFilter: searchString,
                        pageNumber: pageNumber,
                        minPrice: minPrice,
                        maxPrice: maxPrice,
                    },
                    success: function (response) {
                        $(".filter-button").prop("disabled",false);
                        $("#product-content").html(response);
                        $("#page-number").val(pageNumber);
                         if (window.innerWidth < 992)
                             {
                                 $(".styled-pagination").remove();
                             }
                    },
                    error: function (xhr) {
                        $(".filter-button").prop("disabled",false);
                        var response = JSON.parse(xhr.responseText);
                        showAlert(button,response.message, "danger");
                    }
                });
            });
            //previous button clicked
            $(document).on("click", ".pagination-previous", function () {
                const visibleSidebar = $("#pcFilterSidebar").is(":visible") ? "#pcFilterSidebar" : "#mobileFilterSidebar";
                let catalogID =  $(`${visibleSidebar} #catalog-id`).val();
                let searchString = $(`${visibleSidebar} .product-search`).val();
                let minPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 0);
                let maxPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 1);
                let pageNumber = parseInt($("#page-number").val()) - 1;
                var button = $(this);
                $(".filter-button").prop("disabled",true);
                $.ajax({
                    type: "GET",
                    async: true,
                    url: "/Shop/ShopFiltered",
                    data: {
                        catalogID: catalogID,
                        searchFilter: searchString,
                        pageNumber: pageNumber,
                        minPrice: minPrice,
                        maxPrice: maxPrice,
                    },
                    success: function (response) {
                        $(".filter-button").prop("disabled",false);
                        $("#product-content").html(response);
                        $("#page-number").val(pageNumber);
                         if (window.innerWidth < 992)
                             {
                                 $(".styled-pagination").remove();
                             }
                    },
                    error: function (xhr) {
                         $(".filter-button").prop("disabled",false);
                        var response = JSON.parse(xhr.responseText);
                        showAlert(button,response.message, "danger");
                    }
                });
            });
            //page number button clicked
            $(document).on("click", ".pagination-number", function () {
                const visibleSidebar = $("#pcFilterSidebar").is(":visible") ? "#pcFilterSidebar" : "#mobileFilterSidebar";
                let catalogID =  $(`${visibleSidebar} #catalog-id`).val();
                let searchString = $(`${visibleSidebar} .product-search`).val();
                let minPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 0);
                let maxPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 1);
                let pageNumber = parseInt($(this).data("number"));
                var button = $(this);
                 $(".filter-button").prop("disabled",true);
                $.ajax({
                    type: "GET",
                    async: true,
                    url: "/Shop/ShopFiltered",
                    data: {
                        catalogID: catalogID,
                        searchFilter: searchString,
                        pageNumber: pageNumber,
                        minPrice: minPrice,
                        maxPrice: maxPrice,
                    },
                    success: function (response) {
                         $(".filter-button").prop("disabled",false);
                        $("#product-content").html(response);
                        $("#page-number").val(pageNumber);
                        button.addClass("active");
                         if (window.innerWidth < 992)
                             {
                                 $(".styled-pagination").remove();
                             }
                    },
                    error: function (xhr) {
                         $(".filter-button").prop("disabled",false);
                        var response = JSON.parse(xhr.responseText);
                        showAlert(button,response.message, "danger");
                    }
                });
            });
            //filter by price clicked
            $(document).on("click", ".filter-by-price-button", function () {
                const visibleSidebar = $("#pcFilterSidebar").is(":visible") ? "#pcFilterSidebar" : "#mobileFilterSidebar";
                let catalogID =  $(`${visibleSidebar} #catalog-id`).val();
                let searchString = $(`${visibleSidebar} .product-search`).val();
                let minPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 0);
                let maxPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 1);
                
                var button = $(this);
                 $(".filter-button").prop("disabled",true);
                $.ajax({
                    type: "GET",
                    async: true,
                    url: "/Shop/ShopFiltered",
                    data: {
                        catalogID: catalogID,
                        searchFilter: searchString,
                        pageNumber: 1,
                        minPrice: minPrice,
                        maxPrice: maxPrice,
                    },
                    success: function (response) {
                        $("#product-content").html(response);
                         $(".filter-button").prop("disabled",false);
                         if (window.innerWidth < 992)
                             {
                                 $(".styled-pagination").remove();
                             }
                    },
                    error: function (xhr) {
                        var response = JSON.parse(xhr.responseText);
                         $(".filter-button").prop("disabled",false);
                        showAlert(button,response.message, "danger");
                    }
                });
            });
            //product search clicked
            $(document).on("click", ".product-search-button", function () {
                
                const visibleSidebar = $("#pcFilterSidebar").is(":visible") ? "#pcFilterSidebar" : "#mobileFilterSidebar";
                let catalogID =  $(`${visibleSidebar} #catalog-id`).val();
                let searchString = $(`${visibleSidebar} .product-search`).val();
                let minPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 0);
                let maxPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 1);
                 $(".filter-button").prop("disabled",false);
                var button = $(this);


                $.ajax({
                    type: "GET",
                    async: true,
                    url: "/Shop/ShopFiltered",
                    data: {
                        catalogID: catalogID,
                        searchFilter: searchString,
                        pageNumber: 1,
                        minPrice: minPrice,
                        maxPrice: maxPrice,
                    },
                    success: function (response) {
                        $("#product-content").html(response);
                          if (window.innerWidth < 992)
                             {
                                 $(".styled-pagination").remove();
                             }
                              $(".filter-button").prop("disabled",true);
                    },
                    error: function (xhr) {
                        var response = JSON.parse(xhr.responseText);
                         $(".filter-button").prop("disabled",true);
                        showAlert(button,response.message, "danger");
                    }
                });
            });
            //filter by catalog clicked
            $(document).on("click", ".filter-by-catalog", function () {

                let catalogID = $(this).data("id");
                const visibleSidebar = $("#pcFilterSidebar").is(":visible") ? "#pcFilterSidebar" : "#mobileFilterSidebar";
                let searchString = $(`${visibleSidebar} .product-search`).val();
                let minPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 0);
                let maxPrice = $(`${visibleSidebar} .price-range-slider`).slider("values", 1);
                var button = $(this);
                var clickedItem = $(this).parent();
                 $(".filter-button").prop("disabled",true);
                $.ajax({
                    type: "GET",
                    async: true,
                    url: "/Shop/ShopFiltered",
                    data: {
                        catalogID: catalogID,
                        searchFilter: searchString,
                        pageNumber: 1,
                        minPrice: minPrice,
                        maxPrice: maxPrice,
                    },
                    success: function (response) {
                        $("#product-content").html(response);
                        $(".filter-by-catalog-list").removeClass("active-category");
                        clickedItem.addClass("active-category");
                         $(".filter-button").prop("disabled",false);
                 if (window.innerWidth < 992)
                             {
                                 $(".styled-pagination").remove();
                             }

                    },
                    error: function (xhr) {
                        var response = JSON.parse(xhr.responseText);
                         $(".filter-button").prop("disabled",false);
                        showAlert(button,response.message, "danger");
                    }
                });
            });

            //add to cart
            $(document).on("click", ".add-to-cart", function () {
                var userId = $(this).closest('.clearfix').find('.user-id').val();
                var productCode = $(this).closest('.clearfix').find('.product-code').val();
                var price = parseFloat($(this).closest('.clearfix').find('.total-price').val());
                var quantity = parseInt($(this).closest('.clearfix').find('.quantity').val());
                var button = $(this);
                 $(".add-to-cart").text("işlem yapılıyor...").prop("disabled",true);
                $.ajax({
                    type: "POST",
                    url: "/Cart/AddToCart",
                    headers: { "RequestVerificationToken": getAntiForgeryToken() },
                    async: true,
                    data: {
                        userId: userId,
                        productCode: productCode,
                        price: price,
                        quantity: quantity
                    },
                    success: function (response) {
                         $(".filter-button").prop("disabled",false);
                          $(".add-to-cart").text("Sepete Ekle").prop("disabled",false);
                        if(response.success){
                            showAlert(button, response.message, "success");
                            let currentItem = response.totalProduct;
                            $(".cart .cart-count").text(currentItem);
                        }
                        else{
                            showAlert(button, response.message, "error");
                            let currentItem = response.totalProduct;
                            $(".cart .cart-count").text(currentItem);
                        }
                    },
                    error: function (xhr) {
                        var response = JSON.parse(xhr.responseText);
                        $(".filter-button").prop("disabled",false);
                        showAlert(button, response.message, "danger");
                        $(".add-to-cart").text("Sepete Ekle").prop("disabled",false);
                    }
                });
            });
            //add to inquiry
            $(document).on("click", ".add-to-inquiry", function () {
                var userId = $(this).closest('.clearfix').find('.user-id').val();
                var productCode = $(this).closest('.clearfix').find('.product-code').val();
                var price = parseFloat($(this).closest('.clearfix').find('.total-price').val());
                var quantity = parseInt($(this).closest('.clearfix').find('.quantity').val());
                var button = $(this);
                 $(".add-to-inquiry").text("işlem yapılıyor...").prop("disabled",true);
                $.ajax({
                    type: "POST",
                    url: "/Cart/AddToInquiry",
                    headers: { "RequestVerificationToken": getAntiForgeryToken() },
                    async: true,
                    data: {
                        userId: userId,
                        productCode: productCode,
                        price: price,
                        quantity: quantity
                    },
                    success: function (response) {
                        $(".add-to-inquiry").text("Talep Oluştur").prop("disabled",false);
                        if(response.success){
                            showAlert(button, response.message, "success");
                            let currentItem = response.totalProduct;
                            $(".inquiry .inquiry-count").text(currentItem);
                        }
                        else{
                            showAlert(button, response.message, "error");
                            let currentItem = response.totalProduct;
                            $(".inquiry .inquiry-count").text(currentItem);
                        }
                    },
                    error: function (xhr) {
                        var response = JSON.parse(xhr.responseText);
                         $(".add-to-inquiry").text("Talep Oluştur").prop("disabled",false);
                        showAlert(button, response.message, "danger");
                    }
                });
            });
        });
        //show mobile filter button for mobile screens
        function toggleMobileFilter() {
            const sidebar = document.getElementById("mobileFilterSidebar");
            sidebar.classList.toggle("active");
             if (window.innerWidth < 992)
                             {
                                 $(".styled-pagination").remove();
                             }
        }
        document.addEventListener("DOMContentLoaded", function () {
           
            // Close when clicking outside of the sidebar
            document.addEventListener("click", function (event) {
                const sidebar = document.getElementById("mobileFilterSidebar");
                const filterButton = document.getElementById("mobileFilterButton");

                const isClickInsideSidebar = sidebar.contains(event.target);
                const isFilterButton = filterButton?.contains(event.target);

                if (!isClickInsideSidebar && !isFilterButton && sidebar.classList.contains("active")) {
                    sidebar.classList.remove("active");
                }
            });
        });
        //if resize window show filter menus accordingly
         window.addEventListener('resize', () => {
             const sidebarMobile = document.getElementById("mobileFilterSidebar");
             const sidebarPc = document.getElementById("pcFilterSidebar");
             const filterButtonMobile = document.getElementById("mobileFilterButton");
             if (window.innerWidth >= 992) {
                 sidebarMobile.classList.remove("active");
                 sidebarPc.style.display = "block";
                 filterButtonMobile.style.display = "none";
                  $("#pagination-list").remove();

                renderPagination($("#page-number").val(),$("#total-page").val());
                const pagination = document.getElementById("pagination-list");
                pagination.style.display="block";
                $("#pagination-list").css("display","block");
            }
             else {

                 sidebarPc.classList.add("active");
                 sidebarPc.style.display = "none";
                 filterButtonMobile.style.display = "block";
                 $(".styled-pagination").remove();
                 $("#pagination-list").css("display","none");
             }
               
         });
         function renderPagination(currentPage, totalPages) {
            let html = `<div class="row clearfix"> <ul class="styled-pagination text-center" id="pagination-list">`;

            if (currentPage > 1) {
                html += `<li class="prev"><a class="pagination-previous"><span class="fa fa-angle-left"></span></a></li>`;
            }

            for (let i = 1; i <= totalPages; i++) {
                html += `<li><a class="pagination-number${i === currentPage ? ' active' : ''}" data-number="${i}">${i}</a></li>`;
            }

            if (currentPage < totalPages) {
                html += `<li class="next"><a class="pagination-next"><span class="fa fa-angle-right"></span></a></li>`;
            }

            html += `</ul> </div>`;

            $("#pagination-div").html(html); // append new
        }
    </script>
}
